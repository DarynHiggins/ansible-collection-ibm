---
- name: Create an endpoint for a given OpenAPI definition and to create a subscription for this endpoint.
  hosts: localhost
  collections:
   - ibm.cloudcollection
  tasks:
    - name: Fetch the variables from var file
      include_vars:
        file: vars.yml
    
    - name: provision apigateway resource instance
      ibm_resource_instance:
        name: "{{ service_name }}"
        location: "global"
        service: "api-gateway"
        plan: "lite"
      register: resource_instance_output
    
    - name: Save api-gateway resource instance as fact
      set_fact:
        cacheable: True
        api-gateway: "{{ resource_instance_output.resource }}"
      when: resource_instance_output.rc==0

    - name: provision endpoint resource for one api document
      ibm_api_gateway_endpoint:
        service_instance_crn: "{{ api-gateway.id }}"
        name: "{{ endpoint_name }}"
        managed: "{{ managed }}"
        open_api_doc_name: "{{ file_path }}"
      register: api_gateway_endpoint_output

    - name: Save endpoint resource as fact
      set_fact:
        cacheable: True
        endpoint: "{{ api_gateway_endpoint_output.resource }}"
      when: api_gateway_endpoint_output.rc==0

    - name: provision endpoint resources for a directory of api douments
      ibm_api_gateway_endpoint:
        service_instance_crn: "{{ api-gateway.id }}"
        name: "{{ item.split('.')[0] }}"
        managed: "{{ managed }}"
        open_api_doc_name: "{{ dir_path }}/{{ item }}"
      with_fileglob: '{{ dir_path }}/*.json'
      register: api_gateway_endpoints_output 

    - name: Get api gateway info
      ibm_api_gateway_info:
        service_instance_crn: "{{ api-gateway.id }}"
      register: apigateway_output

    - name: Save api gateway info as fact
      set_fact:
        cacheable: True
        endpoint-info: "{{ apigateway_output.resource }}"
      when: apigateway_output.rc==0
       
    - name: provision subscription resource for one endpoint
      ibm_api_gateway_endpoint_subscription:
        artifact_id: endpoint-info.endpoint.endpoints[0].endpoint_id
        name: "{{ subscription_name }}"
        type: "{{ subscription_type }}"
        client_secret: "{{ secret }}"
      register: subscription_output

    - name: Save api gateway endpoint suscription info as fact
      set_fact:
        cacheable: True
        endpoint: "{{ subscription_output.resource }}"
      when: subscription_output.rc==0    
